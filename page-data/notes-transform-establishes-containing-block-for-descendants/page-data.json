{"componentChunkName":"component---src-templates-blog-post-js","path":"/notes-transform-establishes-containing-block-for-descendants/","result":{"data":{"site":{"siteMetadata":{"title":"30 Days of CSS Girls","author":"CodingGirlsSG"}},"markdownRemark":{"id":"af34f7ec-2902-5e47-bbd0-cf0485af16ad","excerpt":"Study notes by Wei, also published here.  Establishes Containing Block for Descendants A problem came up when I was trying to draw a heart using CSS following‚Ä¶","html":"<p>Study notes by <a href=\"http://wgao19.cc\">Wei</a>, also published <a href=\"https://dev.wgao19.cc/transform-establishes-containing-block-for-descendants/\">here</a>.</p>\n<h1><code class=\"language-text\">transform</code> Establishes Containing Block for Descendants</h1>\n<p>A problem came up when I was trying to draw a heart using CSS following <a href=\"https://css-tricks.com/books/volume-i/make-heart-shape/\">this guide</a>.</p>\n<p>You draw a box first.\nAnd then you draw two circles attached to two adjacent sides of the box.\nFinally, you rotate the square by -45 degrees to get the heart upright (but the box is standing on its foot).\nThe whole idea is presented fairly straightforwardly by this diagram:</p>\n<p><img src=\"https://css-tricks.com/wp-content/uploads/2017/05/book-heart-figure-2.jpg\"></p>\n<p>For learning purposes, I tried to figure out which side is which alright.\nSo I went ahead and changed the colors of my <code class=\"language-text\">::before</code> and <code class=\"language-text\">::after</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.heart:before</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> -15px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.heart:after</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> -15px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> teal<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://i.imgur.com/TKXeubZ.png\"></p>\n<p>It looks like that my <code class=\"language-text\">::before</code> (pink) is on the left, my <code class=\"language-text\">::after</code> (teal) is on the right, and my heart is rotated counter-clockwise because <code class=\"language-text\">::before</code> is supposed to have a negative <code class=\"language-text\">top</code> offset, and <code class=\"language-text\">::after</code> is supposed to have a negative <code class=\"language-text\">right</code> offset.</p>\n<p>To verify this idea, I decided to take out the line that rotates the heart:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.heart</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* transform: rotate(-45deg); */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I would expect my heart to lie down, right, something like this:</p>\n<p><img src=\"https://i.imgur.com/otJ005K.png\"></p>\n<p>But, uh, no. Not exactly. Once I remove that line and hit ‚Äúrefresh‚Äù. My heart is broken üò±.\nOr to be more precise, torn apart.</p>\n<p><img src=\"https://i.imgur.com/EEWvJq5.png\"></p>\n<p>Before I go on explaining what went wrong, I have a couple of confessions to make.</p>\n<p>First, I did not follow the guide exactly. If you copy-and-pasted the code, you‚Äôd notice that the one of the rounded side does not show up. This is because it is missing the offset definition for the <code class=\"language-text\">::after</code> pseudo-element.</p>\n<p>But I assume you‚Äôd figured that out according to the diagram by yourself, too.</p>\n<p>Second, I gave my <code class=\"language-text\">.heart</code> element a margin offset so that it displays in the center of my screen:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.heart</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 300px auto 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Without this line, the result would look a bit different, but equally wrong.</p>\n<p>Now let‚Äôs try to fix it together.</p>\n<h2>Attempt Fix</h2>\n<p>It seems to me that my torn apart heart has the <code class=\"language-text\">::before</code> and <code class=\"language-text\">::after</code> pseudo-elements positioned with respect to the <em>viewport</em>, not their parent, which is the square <code class=\"language-text\">.heart</code>.</p>\n<p>If you are not familiar with this, I encourage you to read the CSS Specification <a href=\"https://www.w3.org/TR/CSS2/visuren.html\">Visual Formatting Model</a>.\nAnd I quote here in section <a href=\"https://www.w3.org/TR/CSS2/visuren.html#absolute-positioning\">9.8.4 Absolute positioning</a> that <em>absolute positioned boxes are</em>:</p>\n<blockquote>\n<p>‚Ä¶ positioned with respect to its containing block. The containing block for a positioned box is established by the nearest positioned ancestor (or, if none exists, the initial containing block).</p>\n</blockquote>\n<p>In human language (with a bit loss of precision), absolute positioned boxes are placed with repect to its nearest ancestor with <code class=\"language-text\">position: relative</code>. And if such ancestor does not exist, they are positioned with respect to the root element, which is (roughly) the viewport.</p>\n<p>So it seems that my <code class=\"language-text\">::before</code> and <code class=\"language-text\">::after</code> pseudo-elements could not find their <code class=\"language-text\">position: relative</code> ancestor, and so are placed with respect to the viewport.\nThey both have a negative offset equal to half of their diameters, so I have them neatly cut in half by the edges of my viewport.</p>\n<p>Knowing this, I should be able to fix this by adding the <code class=\"language-text\">position: relative</code> to my <code class=\"language-text\">.heart</code> element:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.heart</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* transform: rotate(-45deg); */</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And, expectedly, my heart is fixed, and is lied down, <a href=\"https://codepen.io/wgao19/pen/moPpEY\">CodePen: <code class=\"language-text\">position: relative</code> Establishes Containing Block for Descendants</a>:</p>\n<p><img src=\"https://i.imgur.com/otJ005K.png\"></p>\n<h2>The missing <code class=\"language-text\">position: relative</code></h2>\n<p>An immediate question followed up: Have I <em>not</em> initially put <code class=\"language-text\">position: relative</code> to my <code class=\"language-text\">.heart</code>?\nNo, right? How come initially the heart was intact?</p>\n<p>The only line of code I changed was:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.heart</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>-45deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>So something <em>else</em> must have happened in between.\nWhat if I try <code class=\"language-text\">transform: rotate(0deg)</code>, without <code class=\"language-text\">position: relative</code>, and see what happens?</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.heart</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>0deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* position: relative; */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I have a lied-down heart exactly like my previous fix! <a href=\"https://codepen.io/wgao19/pen/LaNegv\">CodePen: Transform Establishes A Containing Block for All Descendants</a></p>\n<p><img src=\"https://i.imgur.com/otJ005K.png\"></p>\n<h2><code class=\"language-text\">transform</code> other than <code class=\"language-text\">none</code> establishes a containing block</h2>\n<p>Turns out that:</p>\n<blockquote>\n<p>any value other than <code class=\"language-text\">none</code> for the transform property also causes the element to establish a containing block for all descendants.</p>\n</blockquote>\n<p>Says section 3 <a href=\"https://www.w3.org/TR/css-transforms-1/#transform-rendering\">The Transform Rendering Model</a> of <a href=\"https://www.w3.org/TR/css-transforms-1/\">CSS Transforms Module Level 1</a>.</p>\n<h2>What happens when you <code class=\"language-text\">transform</code> a box other than the transformation itself?</h2>\n<p>If you transform something, would you expect whatever inside to be transformed together?\nIf you do, you‚Äôd share the same intuition with CSS‚Äôs intention.\nThis includes:</p>\n<ul>\n<li><strong>Establishes a containing block</strong>: (again with some loss of precision) absolute positioned children will offset according to it, width / height will be calculated according to it, etc.</li>\n<li><strong>Creates a stacking context</strong>: you may not make something look ‚Äúinserted‚Äù to the stacking context even if you set a <code class=\"language-text\">z-index</code> that falls in the range, because anything inside that stacking context shall be atomic with respect to its outside.</li>\n</ul>\n<p>And finally, the transformation <em>may</em> extend, but not shrink, the size of the overflow area.\nIntuitively, what this is saying is that if you transform a box, whatever was visible will remain visible after the transformation.\nIn this illustration below, the orange part will be the extended (visible) overflow area.</p>\n<p><img src=\"https://i.imgur.com/RojEhn1.png\"></p>\n<h2>Specs Reading</h2>\n<p>I hope the exploration of this problem makes it easier for you to read the following sections of the CSS Specifications!</p>\n<ul>\n<li><a href=\"https://www.w3.org/TR/css-transforms-1\">CSS Transforms Module Level 1</a></li>\n<li><a href=\"https://www.w3.org/TR/CSS2/visuren.html\">9 Visual formatting model</a></li>\n<li><a href=\"https://www.w3.org/TR/CSS2/visudet.html\">10 Visual formatting model details</a></li>\n</ul>","frontmatter":{"title":"Study Notes: Transform Establishes Containing Block for Descendants","date":"March 02, 2019"}}},"pageContext":{"slug":"/notes-transform-establishes-containing-block-for-descendants/","previous":{"fields":{"slug":"/day-5-6--heart-button/"},"frontmatter":{"title":"Days 5 ~ 6: Heart Button"}},"next":{"fields":{"slug":"/day-7-8--heart-beyond-css/"},"frontmatter":{"title":"Days 7 ~ 8: Seeing the Limit of Drawing with CSS"}}}},"staticQueryHashes":["2633910083","3128451518","3649515864"]}