{"componentChunkName":"component---src-templates-blog-post-js","path":"/notes-css-selectors-tae/","result":{"data":{"site":{"siteMetadata":{"title":"30 Days of CSS Girls","author":"CodingGirlsSG"}},"markdownRemark":{"id":"bc2a71d7-6213-590e-83dc-9f9d5ff94db7","excerpt":"Original post by tae: Reading CSS Selectors Days 7~8 : Reading CSS Selectors I already know almost CSS selector yet, but I decide to read again, and remind it…","html":"<p>Original post by <a href=\"https://github.com/Ta2Rim\">tae</a>: <a href=\"https://gist.github.com/Ta2Rim/c408589579176c2483fd601ca87ec6be\">Reading CSS Selectors</a></p>\n<h1>Days 7~8 : Reading CSS Selectors</h1>\n<p>I already know almost CSS selector yet, but I decide to read again, and remind it.\nI like CSS selectors, especially pseudo-elements &#x26; pseudo-classes\nthose enable isolated struction between styling and mark up. I love it. there’s no need to make useless div intented to only style thanks for those.</p>\n<h2>What I newly learned after reading spec</h2>\n<p><strong>Attribute selectors</strong></p>\n<ul>\n<li><code class=\"language-text\">[att|=val]</code> Represents an element with the att attribute whose value is a white space-separated list of wrds, one of which is exactly ‘val’</li>\n</ul>\n<p><strong>Compare pseudo-elements with pseudo-classes</strong></p>\n<ul>\n<li>Pseudo-elemnts create abstractions about the document tree beyond those specified by the document language.\nCSS pseudo-element allow style some parts that document language doesn’t offer to access. (e.g. <code class=\"language-text\">:first letter</code>, <code class=\"language-text\">:first line</code>, <code class=\"language-text\">:before</code> , <code class=\"language-text\">:after</code>)</li>\n<li>Pseudo-classes classify elements on chracteristics other than their name, attributes or content.</li>\n<li>Neither pseudo-element s nor pseudo-classes appear in the document source or document tree.</li>\n</ul>\n<p><strong>Pseudo-classes</strong></p>\n<ul>\n<li>UA are not required to reflow a currently displayed document due to pseudo-class transitions.</li>\n</ul>\n<p>It means UA may ignore the style rule when dynamic pseudo classes cause change position and canvas reflow. + <code class=\"language-text\">a:hover</code> must be placed after <code class=\"language-text\">a:link</code> and <code class=\"language-text\">a:visited</code> rules. + The language pseudo-class : <code class=\"language-text\">:lang(ko)</code></p>\n<p><strong>Pseudo-elements</strong></p>\n<ul>\n<li>UA rewrite HTML paragraph due to pseudo-element, by including the fictional tag sequence.</li>\n<li><code class=\"language-text\">:first-line</code> pseudo-lement can only be attached to a “block container element”,</li>\n<li>while <code class=\"language-text\">:first-line</code> pseudo-element start tag is inserted right after the start tag of the block element,\nthe :first-letter pseudo-element tags abut the content.( After the rule p:before {content:‘note’}, the selector p:first-letter matches the ‘n’ of note.</li>\n<li>The <code class=\"language-text\">:before</code> and <code class=\"language-text\">:after</code> pseudo-elements can be used to inset generated content before or after an element’s content</li>\n</ul>","frontmatter":{"title":"Study Notes: Reading CSS Selectors","date":"March 04, 2019"}}},"pageContext":{"slug":"/notes-css-selectors-tae/","previous":{"fields":{"slug":"/day-7-8--heart-beyond-css/"},"frontmatter":{"title":"Days 7 ~ 8: Seeing the Limit of Drawing with CSS"}},"next":{"fields":{"slug":"/contributing/"},"frontmatter":{"title":"Contributing"}}}},"staticQueryHashes":["2633910083","3128451518","3649515864"]}