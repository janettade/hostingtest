{"version":3,"sources":["webpack:///./src/components/Intro/index.js","webpack:///./src/templates/blog-post.js"],"names":["bioQuery","Bio","React","createElement","StaticQuery","query","render","data","author","social","site","siteMetadata","className","href","target","width","src","BlogPostTemplate","_React$Component","apply","arguments","_inheritsLoose","prototype","post","this","props","markdownRemark","siteTitle","title","previous","next","pageContext","Layout","location","SEO","frontmatter","description","excerpt","date","dangerouslySetInnerHTML","__html","html","Component"],"mappings":"2IAAA,+CA2DA,MAAMA,EAAQ,aAoBCC,IA3Ef,WACE,OACEC,IAAAC,cAACC,cAAW,CACVC,MAAOL,EACPM,OAAQC,IACN,MAAM,OAAEC,EAAM,OAAEC,GAAWF,EAAKG,KAAKC,aACrC,OACET,IAAAC,cAAA,OAAKS,UAAU,eACbV,IAAAC,cAAA,KACEU,KAAK,wCACLC,OAAO,SACPF,UAAU,cACX,wBAGDV,IAAAC,cAAA,KACEU,KAAK,wCACLC,OAAO,SACPF,UAAU,cACX,aAGDV,IAAAC,cAAA,KAAGU,KAAK,eAAeD,UAAU,cAAa,eAG9CV,IAAAC,cAAA,KAAGU,KAAK,WAAWD,UAAU,cAAa,oBAG1CV,IAAAC,cAAA,KACEW,OAAO,SACPD,KAAK,+CACLD,UAAU,aAEVV,IAAAC,cAAA,OACEY,MAAM,KACNC,IAAI,uDAGRd,IAAAC,cAAA,KACEW,OAAO,SACPD,KAAK,0CACLD,UAAU,aAEVV,IAAAC,cAAA,OACEY,MAAM,KACNC,IAAI,yF,sIC1CA,IAEdC,EAAgB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAgCnB,OAhCmBC,YAAAJ,EAAAC,GAAAD,EAAAK,UACpBhB,OAAA,WACE,MAAMiB,EAAOC,KAAKC,MAAMlB,KAAKmB,eACvBC,EAAYH,KAAKC,MAAMlB,KAAKG,KAAKC,aAAaiB,OAC9C,SAAEC,EAAQ,KAAEC,GAASN,KAAKC,MAAMM,YAEtC,OACE7B,IAAAC,cAAC6B,IAAM,CAACC,SAAUT,KAAKC,MAAMQ,SAAUL,MAAOD,GAE5CzB,IAAAC,cAAC+B,IAAG,CAACN,MAAOL,EAAKY,YAAYP,MAAOQ,YAAab,EAAKc,UAEtDnC,IAAAC,cAAA,KAAGS,UAAU,QAAQW,EAAKY,YAAYG,MACtCpC,IAAAC,cAAA,OAAKoC,wBAAyB,CAAEC,OAAQjB,EAAKkB,UAoBlDxB,EAhCmB,CAASf,IAAMwC,WAmCtBzB","file":"component---src-templates-blog-post-js-75233e79e97da9d28095.js","sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport './style.css';\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata;\n        return (\n          <div className=\"intro-links\">\n            <a\n              href=\"https://codepen.io/collection/XJJoBY/\"\n              target=\"_blank\"\n              className=\"intro-link\"\n            >\n              Challenge Collection\n            </a>\n            <a\n              href=\"https://codepen.io/collection/XmwwGK/\"\n              target=\"_blank\"\n              className=\"intro-link\"\n            >\n              Show Room\n            </a>\n            <a href=\"/study-notes\" className=\"intro-link\">\n              Study Notes\n            </a>\n            <a href=\"/mentors\" className=\"intro-link\">\n              Meet Our Mentors\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://twitter.com/hashtag/30DaysOfCSSGirls\"\n              className=\"logo-link\"\n            >\n              <img\n                width=\"16\"\n                src=\"https://cdn.worldvectorlogo.com/logos/twitter.svg\"\n              />\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://codepen.io/tag/30DaysOfCSSGirls\"\n              className=\"logo-link\"\n            >\n              <img\n                width=\"16\"\n                src=\"http://blog.codepen.io/wp-content/uploads/2012/06/Button-Fill-Black-Large.png\"\n              />\n            </a>\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/logo.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Intro from '../components/Intro'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\n\nimport './style.css'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        {/* <Intro /> */}\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        {/* <h1>{post.frontmatter.title}</h1> */}\n        <p className=\"date\">{post.frontmatter.date}</p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n\n        {/* <ul>\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul> */}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n"],"sourceRoot":""}